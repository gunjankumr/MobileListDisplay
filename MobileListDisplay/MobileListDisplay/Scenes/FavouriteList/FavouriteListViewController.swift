//
//  FavouriteListViewController.swift
//  MobileListDisplay
//
//  Created by Sujeet Sinha on 29/9/18.
//  Copyright (c) 2018 Allianz Technology. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavouriteListDisplayLogic: class {

}

class FavouriteListViewController: UIViewController, FavouriteListDisplayLogic {
  var interactor: FavouriteListBusinessLogic?
  var router: (NSObjectProtocol & FavouriteListRoutingLogic & FavouriteListDataPassing)?

  // MARK: Object Lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  // MARK: View Lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
  }
  
  // MARK: - Request Functions
  
  // MARK: - Display Functions
  
}

// MARK: - Setup, Routing

extension FavouriteListViewController {
  
  fileprivate func setup() {
    let viewController = self
    let interactor = FavouriteListInteractor()
    let presenter = FavouriteListPresenter()
    let router = FavouriteListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
}
